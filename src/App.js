import { BrowserRouter, Routes, Route, Navigate } from "react-router-dom";
import { useState, useEffect } from 'react';
import Header from './components/Header';
import LandingPage from './components/LandingPage';
import SongRecommendationsPage from "./components/SongRecommendationsPage";
import './App.css';
import { getLocationDetails } from "./utilities/location";

const App = () => {
  
  const [weather, setWeather] = useState("");
  const [autoGeneratedWeather, setAutoGeneratedWeather] = useState(false);
  useEffect(() => {
    (async () => {
      const weather = await getLocationDetails();

      if (Object.keys(weather).length === 0) {
        setWeather("Error"); // NOTE: Indicates lack of permissions (for location data), failed API call etc.
      } else {
        setWeather(weather["weather"][0]["main"]); // NOTE: Else, in success case, set to strong representing weather
        setAutoGeneratedWeather(true);
      };
    }) ();
  }, []);

    if (!weather) {
      return (
        <div>Loading geolocation and weather data...</div>
      );
    } else {
      return (
        <>
          <Header />
          <BrowserRouter>
            <Routes>
              <Route path="/" element={
                                        (weather === "Error" || !autoGeneratedWeather)
                                        ? <LandingPage
                                            weather={weather}
                                            setWeather={setWeather}
                                            autoGeneratedWeather={autoGeneratedWeather}
                                          />
                                        : <Navigate to="/songs" />
                                      }
              />
              <Route
                path="/songs"
                element = {
                            (weather === "Error")
                            ? <Navigate to="/" />
                            : <SongRecommendationsPage
                                weather={weather}
                                setWeather={setWeather}
                                autoGeneratedWeather={autoGeneratedWeather}
                              />
                          }
              />
            </Routes>
          </BrowserRouter>
        </>
      );
    };
};

export default App;
