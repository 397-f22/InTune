import { useEffect, useState } from 'react';
import { Link } from 'react-router-dom';
import { searchPlaylist, findSongs, timeOfDay } from '../utilities/SpotifyConnect'
import SongRow from './SongRow';
import "./SongRecommendationsPage.css";

const getSeason = (month) => {
  return (month <= 2 || month == 12) ? "Winter" :
          (month <= 5) ? "Spring" :
          (month <= 8) ? "Summer" :
                "Fall"
}

const SongRecommendationsPage = ({ weather, setWeather, autoGeneratedWeather, city }) => {
  const [playlist, setPlaylist] = useState([]);
  const [songs, setSongs] = useState([]);

  useEffect(() => {
    (async () => {
      const plays = await searchPlaylist(weather);
      setPlaylist(plays);

      const songdata = await findSongs(plays);
      setSongs(songdata);
    })();
  }, [])

  const today = new Date();
  const time = today.getHours();

  const month = today.getMonth();

  return (songs.length === 0)
    ? <div>Loading Songsâ€¦</div>
    : (
      <div>
        <Link to="/" params={{ weather, setWeather }}>
          <input
            className="regenerate-songs-button"
            type="button"
            value={autoGeneratedWeather ? "Reload" : "Go Home"}
          />
        </Link>
        <div className="user-metadata">
          <h3>It's a <b>{weather.toLowerCase()} {getSeason(month).toLowerCase()} day {city !== "" ? `in ${city}` : ""}</b></h3>
        </div>
        <div className="playlist-link">
          <a target="_blank" href={playlist.external_urls.spotify}>View entire playlist</a>
        </div>

        <hr className="line-divide" />
        <div className="songs-list">
          {songs.map((song, id) => (
            <SongRow
              key={id}
              songTitle={song.name}
              imageUrl={song.album.images[0].url}
              spotifyUrl={song.external_urls.spotify}
            />
          ))}
        </div>
      </div>
    )
};

export default SongRecommendationsPage;
